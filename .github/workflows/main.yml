# v1.1.0.vc-marketplace-storefront
name: Storefront CI
on:
  workflow_dispatch:
  push:
    branches: [ master, dev ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
      - '**/argoDeploy.json'
  pull_request:
    branches: [ master, dev ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
      - '**/argoDeploy.json'

jobs:
  ci:
    if: ${{ github.actor != 'dependabot[bot]' && (github.event.pull_request.head.repo.full_name == github.repository || github.event.pull_request.head.repo.full_name == '') }}  # Check that PR not from forked repo and not from Dependabot
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}
      IMAGE_NAME: 'marketplace-storefront'
      PACKAGE_SERVER: 'ghcr.io'
      PUBLISH_TO_DOCKER: 'false'
      UPDATE_LATEST_TAG: 'true'
      VERSION_SUFFIX: ''
    outputs:
      artifactUrl:  ${{ steps.artifactUrl.outputs.DOCKER_URL }}

    steps:

    - name: Set variables
      if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request' }}
      run: |
        echo "UPDATE_LATEST_TAG=false" >> $GITHUB_ENV 
      #  echo "PUBLISH_TO_DOCKER=false" >> $GITHUB_ENV

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install VirtoCommerce.GlobalTool
      uses: VirtoCommerce/vc-github-actions/setup-vcbuild@master

    - name: Get Image Version
      uses: VirtoCommerce/vc-github-actions/get-image-version@master
      id: image

    - name: Get changelog
      id: changelog
      uses: VirtoCommerce/vc-github-actions/changelog-generator@master

    - name: Set release variables
      run: |
        echo "VERSION_SUFFIX=${{ steps.image.outputs.suffix }}" >> $GITHUB_ENV

    - name: Set release-alpha variables
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        echo "VERSION_SUFFIX=${{ steps.image.outputs.fullSuffix }}" >> $GITHUB_ENV

    - name: Add version suffix
      if: ${{ github.ref != 'refs/heads/master' }}
      uses: VirtoCommerce/vc-github-actions/add-version-suffix@master
      with:
        versionSuffix: ${{ env.VERSION_SUFFIX }}

    - name: Build
      run: vc-build Compile

    - name: Unit Tests
      run: vc-build Test -TestsFilter "Category=Unit|Category=CI" -skip

    - name: Packaging
      run: vc-build Compress -skip Clean+Restore+Compile+Test

    - name: Set artifactUrl value
      id: artifactUrl
      run: |
        echo ::set-output name=DOCKER_URL::${{ env.PACKAGE_SERVER }}/${{github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.image.outputs.taggedVersion }}

    - name: Build Docker Image
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/master') }}
      id: dockerBuild
      uses: VirtoCommerce/vc-github-actions/build-docker-image@master
      with:
        tag: ${{ steps.image.outputs.taggedVersion }}
        imageName: ${{ env.IMAGE_NAME }}
        dockerFiles: 'https://raw.githubusercontent.com/VirtoCommerce/vc-docker/master/linux/storefront/Dockerfile'

    - name: Publish Github Release
      if: ${{ github.ref == 'refs/heads/master' }}
      with:
        changelog: ${{ steps.changelog.outputs.changelog }}
      uses: VirtoCommerce/vc-github-actions/publish-github-release@master

    - name: Docker Login
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/master') }}
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.PACKAGE_SERVER }}
        username: $GITHUB_ACTOR
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Docker Image
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/master') }}
      uses: VirtoCommerce/vc-github-actions/publish-docker-image@master
      with:
          image: ${{ steps.dockerBuild.outputs.imageName }}
          tag: ${{ steps.image.outputs.taggedVersion }}
          docker_user: ${{ secrets.DOCKER_USERNAME }}
          docker_token: ${{ secrets.DOCKER_TOKEN }}
          docker_hub: ${{ env.PUBLISH_TO_DOCKER }}
          update_latest: ${{ env.UPDATE_LATEST_TAG }}

    - name: Add link to PR
      if: ${{ github.event_name == 'pull_request' }}
      uses: VirtoCommerce/vc-github-actions/publish-artifact-link@master
      with:
        artifactUrl:  ${{ steps.artifactUrl.outputs.DOCKER_URL }}

  dev_cd:
    if: github.ref == 'refs/heads/dev' || (github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/master')
    needs: ci
    runs-on: ubuntu-latest
    env:
      DEPLOYMENT_ENV: 'dev'
      DEPLOY_CONFIG_PATH: '.deployment/vc-deploy-marketplace/argoDeploy.json'
    steps:
      - name: Invoke Module deployment workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: VC deployment
          token: ${{ secrets.REPO_TOKEN }}
          inputs: '{ "artifactUrl": "${{ needs.ci.outputs.artifactUrl }}", "deployEnvironment": "${{ env.DEPLOYMENT_ENV }}", "deployConfigPath": "${{ DEPLOY_CONFIG_PATH }}" }'
